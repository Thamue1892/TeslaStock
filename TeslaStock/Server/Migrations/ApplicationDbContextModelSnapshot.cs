// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeslaStock.Server.Data;

namespace TeslaStock.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeslaStock.Shared.Models.Datum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StockDataId")
                        .HasColumnType("int");

                    b.Property<float>("adj_close")
                        .HasColumnType("real");

                    b.Property<float?>("adj_high")
                        .HasColumnType("real");

                    b.Property<float?>("adj_low")
                        .HasColumnType("real");

                    b.Property<float?>("adj_open")
                        .HasColumnType("real");

                    b.Property<float?>("adj_volume")
                        .HasColumnType("real");

                    b.Property<float>("close")
                        .HasColumnType("real");

                    b.Property<string>("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("high")
                        .HasColumnType("real");

                    b.Property<float>("low")
                        .HasColumnType("real");

                    b.Property<float>("open")
                        .HasColumnType("real");

                    b.Property<float>("split_factor")
                        .HasColumnType("real");

                    b.Property<string>("symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("volume")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("StockDataId");

                    b.ToTable("Datum");
                });

            modelBuilder.Entity("TeslaStock.Shared.Models.Pagination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("count")
                        .HasColumnType("int");

                    b.Property<int>("limit")
                        .HasColumnType("int");

                    b.Property<int>("offset")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pagination");
                });

            modelBuilder.Entity("TeslaStock.Shared.Models.StockData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("paginationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("paginationId");

                    b.ToTable("StockData");
                });

            modelBuilder.Entity("TeslaStock.Shared.Models.Datum", b =>
                {
                    b.HasOne("TeslaStock.Shared.Models.StockData", null)
                        .WithMany("data")
                        .HasForeignKey("StockDataId");
                });

            modelBuilder.Entity("TeslaStock.Shared.Models.StockData", b =>
                {
                    b.HasOne("TeslaStock.Shared.Models.Pagination", "pagination")
                        .WithMany()
                        .HasForeignKey("paginationId");

                    b.Navigation("pagination");
                });

            modelBuilder.Entity("TeslaStock.Shared.Models.StockData", b =>
                {
                    b.Navigation("data");
                });
#pragma warning restore 612, 618
        }
    }
}
